version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: qc_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend

  api:
    image: node:20-alpine
    container_name: qc_api
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV}
      - APP_PORT=${APP_PORT}
      # DB to app (override host to service name "db")
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_SSL=${DB_SSL}
      # security
      - CORS_ORIGIN=${CORS_ORIGIN}
      - RATE_TTL=${RATE_TTL}
      - RATE_LIMIT=${RATE_LIMIT}
      - PINO_LEVEL=${PINO_LEVEL}
    command: >
      sh -c "corepack enable && \
      yarn install --frozen-lockfile && \
      yarn migration:run || true && \
      yarn start:dev"
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - '${APP_PORT:-3000}:3000'
    networks:
      - backend

volumes:
  pg_data:

networks:
  backend:
